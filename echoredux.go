/**
List  3.7 Использование нескольких каналов
*/
package main

import (
	"fmt"
	"os"
	"time"
)

func main() { //Создание канала, посылающего
	done := time.After(5 * time.Second) //← сообщение  по истечении 30 секунд
	echo := make(chan []byte)           //← Создание нового канала для передачи байтов из Stdin
	// в Stdout. Поскольку размер не указан, этот канал может
	// хранить одновременно только одно сообщение
	go readStdin(echo) //← Запуск сопрограммы для чтения данных из Stdin и передачи их в новый канал
	for {              //  Использование инструкции select
		select { //для передачи данных из Stdin в Stdout,
		case buf := <-echo: //если имеются, и для завершения
			os.Stdout.Write(buf) //по событию таймера
		case <-done:
			fmt.Println("Timed out")
			os.Exit(0)
		}
	}
}
func readStdin(out chan<- []byte) { //← Принимает канал для записи  (chan<-) и отправляет в канал введенные данные
	for { //  Копирование данных из Stdin в объект data.
		data := make([]byte, 512)   //Обратите внимание, что метод File.Read
		l, _ := os.Stdin.Read(data) //блокирует выполнение, пока не получит всех данных
		if l > 0 {
			out <- data //← Отправка буферизированных данных в канал
		}
	}
}
